---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.dspweb.name }}"
  labels:
    app: "{{ .Values.dspweb.name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.dspweb.name }}"
  template:
    metadata:
      name: "{{ .Values.dspweb.name }}"
      labels:
        app: "{{ .Values.dspweb.name }}"
    spec:
      containers:
        - name: "{{ .Values.dspweb.name }}"
          image: "{{ .Values.dspweb.image_url }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.dspweb.svc_name }}"
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app: "{{ .Values.dspweb.name }}"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ .Values.dspweb.name }}"
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: "{{ .Values.acm.acm_cert_arn }}"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/group.name: "ingress-rules"
    alb.ingress.kubernetes.io/group.order: "1"
    #alb.ingress.kubernetes.io/tags: Name="{{ .Values.dspweb.name }}",Environment="{{ .Values.tags.env }}",Customer="{{ .Values.tags.customer }}"
spec:
  ingressClassName: alb
  rules:
    - host: eks-dspweb-dev.stella-apps.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "{{ .Values.dspweb.svc_name }}"
                port:
                  number: 80
